import path from "node:path"
import {isRegularDirectorySync, scandirSync} from "@anio-jsbundler/utilities/fs"

function determineDirsThatWillBeAutoGenerated(project) {
	let dirs = {}

	for (const [file_path] of project.files_to_autogenerate) {
		dirs[path.dirname(file_path)] = 1
	}

	return Object.keys(dirs)
}

function difference(a1, a2) {
	return a1.filter(item => !a2.includes(item))
}

export default async function(project) {
	let ret = []

	const project_auto_dir = path.join(project.root, "src", "auto")
	const project_auto_dir_entries = scandirSync(project_auto_dir)

	const dirs_that_will_be_autogenerated = determineDirsThatWillBeAutoGenerated(project)
	const existing_dirs = project_auto_dir_entries.filter(entry => {
		return entry.type === "dir"
	}).map(entry => entry.relative_path)
	const dirs_to_delete = difference(existing_dirs, dirs_that_will_be_autogenerated)

	const files_that_will_be_autogenerated = project.files_to_autogenerate.map(entry => {
		return entry[0]
	})
	const existing_files = project_auto_dir_entries.filter(entry => {
		return entry.type === "file"
	}).map(entry => entry.relative_path)
	const files_to_delete = difference(existing_files, files_that_will_be_autogenerated)

	return [
		// delete files first, then directories
		...files_to_delete,
		...dirs_to_delete
	]
}
